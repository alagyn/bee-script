def myFunc(x: int, y: str, z: int[]) -> int
{

    return "asdf";
}

def space() -> void
{
    # nothing
}

def main() -> int
{
    x: int = "sdf";

    y: int[5] = [1, "a", 0xF1];

    z: byte = 0x12;
    z = 0x31;
    z = 5;
    z = "asdf";

    0 = 5;

    myArray: int[5] = [0, 0, 0, 0, 0];
    myArray[2] = 4;
    myArray[1] = "a";
    myArray["a"] = 5;
    myArray[x] = 5;
    
    myFunc(1, "asdf", [5, 4]);
    myFunc("a", "Asdf", []);

    myFunc();

    bad: void;

    space();
    space("a");

    i: int;
    for(i = 0; i < 5; i = i + 1)
    {
        x = x - 1;
    }

    for(notreal; i; space())
    {
        x = x + 1;
        s = z;
        x = z;
    }

    twoD: int[5][5];

    twoD[0][2] = 6;
    twoD[1][2] = 'a';

    twoD[1] = [0, 5, 3];
    twoD[0] = 'a';

    uninit: byte;

    badArray: int[5] = 6;

    myArray = 5;
    myArray = [1, 3, 5];
    myArray = ["asd", 2];
    myArray = [1, "asdf"];

    misize1: int[4] = [0, 0, 0];
    rightSize: int[4] = [0, 0, 0, 0];
    misize1: int[4] = [0, 0, 0, 0, 0];

    anySize: int[] = [0, 2];

    noInitArray: int[5]; 
    noInitAnySizeArray: int[];

    if(x == 0)
    {

    }

    if(x != "asdf")
    {

    }

    myStr: str = "asdf";
    myByte: byte = 0xFF;
    myByte = 'a';
    myByte = myStr[0];

    myFloat: float = 0.1;
    myFloat = 1;
    myFloat = 2.5;
    myFloat = 1 + 5;
    myFloat = 'a';
    myFloat = "asdf";

    return 1;
}